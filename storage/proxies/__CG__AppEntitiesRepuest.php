<?php

namespace DoctrineProxies\__CG__\App\Entities;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Repuest extends \App\Entities\Repuest implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', 'codeInter', 'codeOwner', 'designType', 'gireType', 'application', 'brandApplication', 'modelApplication', 'brand', 'identification', 'type', 'price', 'measurement', 'id', 'orderLines', 'accounts'];
        }

        return ['__isInitialized__', 'codeInter', 'codeOwner', 'designType', 'gireType', 'application', 'brandApplication', 'modelApplication', 'brand', 'identification', 'type', 'price', 'measurement', 'id', 'orderLines', 'accounts'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Repuest $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setCodeInter($codeInter)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCodeInter', [$codeInter]);

        return parent::setCodeInter($codeInter);
    }

    /**
     * {@inheritDoc}
     */
    public function getCodeInter()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCodeInter', []);

        return parent::getCodeInter();
    }

    /**
     * {@inheritDoc}
     */
    public function setCodeOwner($codeOwner)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCodeOwner', [$codeOwner]);

        return parent::setCodeOwner($codeOwner);
    }

    /**
     * {@inheritDoc}
     */
    public function getCodeOwner()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCodeOwner', []);

        return parent::getCodeOwner();
    }

    /**
     * {@inheritDoc}
     */
    public function setDesignType($designType)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDesignType', [$designType]);

        return parent::setDesignType($designType);
    }

    /**
     * {@inheritDoc}
     */
    public function getDesignType()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDesignType', []);

        return parent::getDesignType();
    }

    /**
     * {@inheritDoc}
     */
    public function setGireType($gireType)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setGireType', [$gireType]);

        return parent::setGireType($gireType);
    }

    /**
     * {@inheritDoc}
     */
    public function getGireType()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getGireType', []);

        return parent::getGireType();
    }

    /**
     * {@inheritDoc}
     */
    public function setApplication($application)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setApplication', [$application]);

        return parent::setApplication($application);
    }

    /**
     * {@inheritDoc}
     */
    public function getApplication()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getApplication', []);

        return parent::getApplication();
    }

    /**
     * {@inheritDoc}
     */
    public function setBrand($brand)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setBrand', [$brand]);

        return parent::setBrand($brand);
    }

    /**
     * {@inheritDoc}
     */
    public function getBrand()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBrand', []);

        return parent::getBrand();
    }

    /**
     * {@inheritDoc}
     */
    public function setIdentification($identification)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIdentification', [$identification]);

        return parent::setIdentification($identification);
    }

    /**
     * {@inheritDoc}
     */
    public function getIdentification()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIdentification', []);

        return parent::getIdentification();
    }

    /**
     * {@inheritDoc}
     */
    public function setType($type)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setType', [$type]);

        return parent::setType($type);
    }

    /**
     * {@inheritDoc}
     */
    public function getType()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getType', []);

        return parent::getType();
    }

    /**
     * {@inheritDoc}
     */
    public function setBrandApplication($brandApplication)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setBrandApplication', [$brandApplication]);

        return parent::setBrandApplication($brandApplication);
    }

    /**
     * {@inheritDoc}
     */
    public function getBrandApplication()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBrandApplication', []);

        return parent::getBrandApplication();
    }

    /**
     * {@inheritDoc}
     */
    public function setModelApplication($modelApplication)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setModelApplication', [$modelApplication]);

        return parent::setModelApplication($modelApplication);
    }

    /**
     * {@inheritDoc}
     */
    public function getModelApplication()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getModelApplication', []);

        return parent::getModelApplication();
    }

    /**
     * {@inheritDoc}
     */
    public function setPrice($price)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPrice', [$price]);

        return parent::setPrice($price);
    }

    /**
     * {@inheritDoc}
     */
    public function getPrice()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPrice', []);

        return parent::getPrice();
    }

    /**
     * {@inheritDoc}
     */
    public function getMeasurement()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMeasurement', []);

        return parent::getMeasurement();
    }

    /**
     * {@inheritDoc}
     */
    public function getCurrentPrice()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCurrentPrice', []);

        return parent::getCurrentPrice();
    }

    /**
     * {@inheritDoc}
     */
    public function getFullName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFullName', []);

        return parent::getFullName();
    }

}
